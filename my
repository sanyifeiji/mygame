<!DOCTYPE html>
<html>
<head>
	<title>mygame</title>
	<link rel="stylesheet" type="text/css" href="./mygame.css">
	<link rel="stylesheet" type="text/css" href="./reset.css">
</head>
<body>

<canvas id="demo" class="democlass" width="1000" height="600"  style="border:1px solid #d3d3d3;"></canvas>

<div><input type="button" value="投弹" onclick="start()"></div>


<script type="text/javascript">
	var canvas=document.getElementById("demo");
	var ctx=canvas.getContext("2d");
	//drawairship(500,500,1);
    var myship=new Ship(200,50,10,1);
        myship.draw();
    var myBom=new Bom(250,250,0,0);
    myBom.draw();


    var myExplosion=new Explosion(130,130);
    myExplosion.draw();


    var shipsy=[300,400,500];
    var shipsx=[250,750];
    var shipslist=[];
    var bomlist=[];
    var explosionlist=[];
    var textlist=['眼','眸','你','好','可','爱'];
    var iii=-1;
    var sco=0;
    shipslist.push(myship);



   setInterval("clock()",50);

  function check(){
    for (var i = 0; i < bomlist.length; i++) {
    	for (var j = 1; j < shipslist.length; j++) {
    		if ((Math.abs(bomlist[i].x-shipslist[j].x)<=30)&&(Math.abs(bomlist[i].y-shipslist[j].y)<=30))
    		{
                bomlist[i].life=false;
                shipslist[j].life=false;

                iii++;
                if (iii>=textlist.length)
                iii=0;

                explosionlist.push(new Explosion(shipslist[j].x,shipslist[j].y,iii));
                
                sco++;
                console.log(sco);


    		}
    	}
    }







  }


function Explosion(x,y,ijk){
this.x=x;
this.y=y;
this.r=30;
this.time=5;
this.ijk=ijk;
this.life=true;
this.next=explosionnext;
this.draw=explosiondraw;
}
function explosionnext(){
	this.r-=2;
	if (this.r<3&&this.time<1)
		this.life=false;

}
function explosiondraw(){
      var context=ctx;
 var step = 1/this.r;
if (this.r>3)
{
   context.beginPath();
   context.moveTo(this.x + this.r, this.y); //从椭圆的左端点开始绘制
   for (var i = 0; i < 2 * Math.PI; i += step)
   {
      //参数方程为x = a * cos(i), y = b * sin(i)，
      //参数为i，表示度数（弧度）
      context.lineTo(this.x + this.r* Math.cos(i)*Math.random(), this.y + this.r* Math.sin(i)*Math.random());
   }
   context.closePath();

   context.stroke();

}
else
{
this.time--;



context.font = "30px Courier New";
	
	context.fillStyle = "blue";
	//从坐标点(50,50)开始绘制文字
	context.fillText(textlist[this.ijk], this.x, this.y);




}

}


  function start()
  {
      var bom=new Bom(myship.x,myship.y,myship.vx,0);
      bomlist.push(bom);



  }



  function clock()
  {
     
   var list=[];
   var list2=[];
   var list3=[];
    ctx.clearRect(0,0,1000,1000);
    check();



   for (var i = 0; i < shipslist.length; i++) {
   	shipslist[i].move();
   	shipslist[i].draw();
   	if (shipslist[i].life===true)
   	{
       list.push(shipslist[i]);
   	}
   }

     shipslist=list;


   for (var i = 0; i < bomlist.length; i++) {
   	bomlist[i].move();
   	bomlist[i].draw();
   		if (bomlist[i].life===true)
   	{
       list2.push(bomlist[i]);
   	}
   }
     bomlist=list2;



    for (var i = 0; i < explosionlist.length; i++) {
   	explosionlist[i].next();
   	explosionlist[i].draw();
   		if (explosionlist[i].life===true)
   	{
       list3.push(explosionlist[i]);
   	}
   }
     explosionlist=list3;








     //console.log(shipslist.length);
    if (Math.random()>0.9)
    {

         var yy=Math.floor(Math.random()*4);
         var xx=Math.floor(Math.random()*2);
         var ns=new TargetShip(shipsx[xx],shipsy[yy],1-xx);
         shipslist.push(ns);


    }

  	//alert("ok");
  }
function Bom(x,y,vx,vy)
   {
   	this.x=x;
   	this.y=y;
   	this.vx=vx;
   	this.vy=vy;
    this.life=true;
    this.draw=drawBom; 
    this.move=moveBom;


   }
   
function drawBom(){
     var x=this.x;
   	 var y=this.y;


   	 ctx.beginPath();
    //设置弧线的颜色为蓝色
    ctx.strokeStyle = "blue";
   
    
    ParamEllipse(ctx, x, y, 8, 20);








   	   var i=-45/180*Math.PI;
      var sx=this.x+10 * Math.cos(i);
      var sy=this.y+ 10 * Math.sin(i);
      ctx.beginPath();
   ctx.moveTo(sx, sy);
   ctx.lineTo(this.x + 40 * Math.cos(i), this.y + 40 * Math.sin(i));
   
   ctx.closePath();
   ctx.stroke();
      
 i=-135/180*Math.PI;
       sx=this.x+10 * Math.cos(i);
       sy=this.y+ 10 * Math.sin(i);
      ctx.beginPath();
   ctx.moveTo(sx, sy);
   ctx.lineTo(this.x + 40 * Math.cos(i), this.y + 40 * Math.sin(i));
   
   ctx.closePath();
   ctx.stroke();


 i=-45/180*Math.PI;
       sx=this.x+40 * Math.cos(i);
       sy=this.y+ 40 * Math.sin(i);
      ctx.beginPath();
   ctx.moveTo(sx, sy);
   ctx.lineTo(this.x + 40 * Math.cos(-135/180*Math.PI), this.y + 40 * Math.sin(-135/180*Math.PI));
   
   ctx.closePath();
   ctx.stroke();

}
function moveBom(){
      this.vy+=2;
      this.x+=this.vx;
      this.y+=this.vy;
     if (this.x>800||this.x<200||this.y>600)
     	this.life=false;


}


function Ship(x,y,vx,dir)
   {
   	this.x=x;
   	this.y=y;
   	this.dir=dir;
    this.draw=drawairship; 
    this.move=move;
    this.life=true;
    this.vx=(2*dir-1)*vx;


   }

function TargetShip(x,y,dir)
   {
   	this.x=x;
   	this.y=y;
   	this.dir=dir;
    this.draw=drawairship; 
    this.move=targetmove;
    this.life=true;



   }



   function move()
   {
        

    this.x+=this.vx;


    if (this.x<200)
    	{this.vx=-this.vx;
    	 this.dir=1;}
    else if ((this.x>800))
    	{this.vx=-this.vx;
    		this.dir=0;}



   }


   function targetmove()
   {
        
if (this.dir===1)
    this.x+=10;
else 
	{this.x-=10;
		
	}

    if (this.x<200)
    	this.life=false;
    else if ((this.x>800))
    	this.life=false;



   }

	function drawairship()
	{
		var x=this.x;
		var y=this.y;
		var dir=this.dir;
      if (dir===0)
         {ParamEllipse(ctx, x,y, 40, 20);
         drawtail(ctx,x,y,45);
         drawtail(ctx,x,y,-45);
         drawtail2(ctx,x,y);
         drawfoot(ctx,x,y,75);
         drawfoot(ctx,x,y,115);
         drawfoot2(ctx,x,y);}
      else 
     {
     	ParamEllipse(ctx, x,y, 40, 20);
         drawtail(ctx,x,y,135);
         drawtail(ctx,x,y,-135);
         drawtail3(ctx,x,y);
         drawfoot(ctx,x,y,75);
         drawfoot(ctx,x,y,115);
         drawfoot2(ctx,x,y);
     }



	}
    function drawfoot2(context,x,y)
    {
    	var i=75/180*Math.PI;
    	var i2=115/180*Math.PI;
      var sx=x+40 * Math.cos(i);
      var sy=y + 24 * Math.sin(i);





        context.beginPath();
   context.moveTo(sx, sy);
   context.lineTo(x + 40 * Math.cos(i2), y + 24 * Math.sin(i2));
   
   context.closePath();
   context.stroke();


    }
    function drawfoot(context,x,y,ii)
    {
    	var i=ii/180*Math.PI;
      var sx=x+40 * Math.cos(i);
      var sy=y + 20 * Math.sin(i);
        context.beginPath();
   context.moveTo(sx, sy);
   context.lineTo(x + 40 * Math.cos(i), y + 24 * Math.sin(i));
   
   context.closePath();
   context.stroke();


    }
function drawtail(context,x,y,ii)
{     
	  var i=ii/180*Math.PI;
      var sx=x+40 * Math.cos(i);
      var sy=y + 20 * Math.sin(i);
      context.beginPath();
   context.moveTo(sx, sy);
   context.lineTo(x + 60 * Math.cos(i), y + 30 * Math.sin(i));
   
   context.closePath();
   context.stroke();

}

function drawtail2(context,x,y)
{     
	 
      context.beginPath();
   context.moveTo(x+30, y);
   context.lineTo(x + 50 ,y);
   
   context.closePath();
   context.stroke();

}
function drawtail3(context,x,y)
{     
	 
      context.beginPath();
   context.moveTo(x-30, y);
   context.lineTo(x - 50 ,y);
   
   context.closePath();
   context.stroke();

}

function ParamEllipse(context, x, y, a, b)
{
   //max是等于1除以长轴值a和b中的较大者
   //i每次循环增加1/max，表示度数的增加
   //这样可以使得每次循环所绘制的路径（弧线）接近1像素
   var step = (a > b) ? 1 / a : 1 / b;
   context.beginPath();
   context.moveTo(x + a, y); //从椭圆的左端点开始绘制
   for (var i = 0; i < 2 * Math.PI; i += step)
   {
      //参数方程为x = a * cos(i), y = b * sin(i)，
      //参数为i，表示度数（弧度）
      context.lineTo(x + a * Math.cos(i), y + b * Math.sin(i));
   }
   context.closePath();
   context.stroke();
}





</script>




</body>
</html>
